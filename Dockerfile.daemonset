ARG CUDA_VERSION=12.4.1
ARG BASE_DIST=ubi8
FROM nvcr.io/nvidia/cuda:${CUDA_VERSION}-base-${BASE_DIST} AS build

ARG GOLANG_VERSION=1.24.1
ENV GOTOOLCHAIN=local
RUN yum install -y wget make git gcc

RUN set -eux; \
    \
    arch="$(uname -m)"; \
    case "${arch##*-}" in \
        x86_64 | amd64) ARCH='amd64' ;; \
        ppc64el | ppc64le) ARCH='ppc64le' ;; \
        aarch64) ARCH='arm64' ;; \
        *) echo "unsupported architecture" ; exit 1 ;; \
    esac; \
    wget -nv -O - https://storage.googleapis.com/golang/go${GOLANG_VERSION}.linux-${ARCH}.tar.gz \
    | tar -C /usr/local -xz

ENV GOPATH=/go
ENV PATH=$GOPATH/bin:/usr/local/go/bin:$PATH

WORKDIR /workspace
COPY . .
RUN GO_BUILD_PACKAGES=./cmd/daemonset make

ARG CUDA_VERSION=12.4.1
ARG BASE_DIST=ubi8
FROM nvcr.io/nvidia/cuda:${CUDA_VERSION}-base-${BASE_DIST}

# Remove CUDA libs(compat etc) in favor of libs installed by the NVIDIA driver
RUN dnf remove -y cuda-*

ENV NVIDIA_DISABLE_REQUIRE="true"
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

WORKDIR /

COPY --from=build /workspace/bin/daemonset .
COPY --from=build /workspace/config /config

# Install / upgrade packages here that are required to resolve CVEs
ARG CVE_UPDATES
RUN if [ -n "${CVE_UPDATES}" ]; then \
        yum update -y ${CVE_UPDATES} && \
        rm -rf /var/cache/yum/*; \
    fi


# non-root user
# USER 65532:65532

ENTRYPOINT ["/daemonset"]
