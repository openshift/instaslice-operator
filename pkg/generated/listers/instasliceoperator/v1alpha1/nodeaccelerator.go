/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	instasliceoperatorv1alpha1 "github.com/openshift/instaslice-operator/pkg/apis/instasliceoperator/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// NodeAcceleratorLister helps list NodeAccelerators.
// All objects returned here must be treated as read-only.
type NodeAcceleratorLister interface {
	// List lists all NodeAccelerators in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*instasliceoperatorv1alpha1.NodeAccelerator, err error)
	// NodeAccelerators returns an object that can list and get NodeAccelerators.
	NodeAccelerators(namespace string) NodeAcceleratorNamespaceLister
	NodeAcceleratorListerExpansion
}

// nodeAcceleratorLister implements the NodeAcceleratorLister interface.
type nodeAcceleratorLister struct {
	listers.ResourceIndexer[*instasliceoperatorv1alpha1.NodeAccelerator]
}

// NewNodeAcceleratorLister returns a new NodeAcceleratorLister.
func NewNodeAcceleratorLister(indexer cache.Indexer) NodeAcceleratorLister {
	return &nodeAcceleratorLister{listers.New[*instasliceoperatorv1alpha1.NodeAccelerator](indexer, instasliceoperatorv1alpha1.Resource("nodeaccelerator"))}
}

// NodeAccelerators returns an object that can list and get NodeAccelerators.
func (s *nodeAcceleratorLister) NodeAccelerators(namespace string) NodeAcceleratorNamespaceLister {
	return nodeAcceleratorNamespaceLister{listers.NewNamespaced[*instasliceoperatorv1alpha1.NodeAccelerator](s.ResourceIndexer, namespace)}
}

// NodeAcceleratorNamespaceLister helps list and get NodeAccelerators.
// All objects returned here must be treated as read-only.
type NodeAcceleratorNamespaceLister interface {
	// List lists all NodeAccelerators in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*instasliceoperatorv1alpha1.NodeAccelerator, err error)
	// Get retrieves the NodeAccelerator from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*instasliceoperatorv1alpha1.NodeAccelerator, error)
	NodeAcceleratorNamespaceListerExpansion
}

// nodeAcceleratorNamespaceLister implements the NodeAcceleratorNamespaceLister
// interface.
type nodeAcceleratorNamespaceLister struct {
	listers.ResourceIndexer[*instasliceoperatorv1alpha1.NodeAccelerator]
}
