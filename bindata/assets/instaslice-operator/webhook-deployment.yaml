apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    cert-manager.io/inject-ca-from: $(CERTIFICATE_NAMESPACE)/$(CERTIFICATE_NAME)
  labels:
    app.kubernetes.io/managed-by: das-operator
    app.kubernetes.io/name: das-operator-webhook
    app.kubernetes.io/part-of: das-operator
    app.kubernetes.io/version: 0.0.1
  name: das-operator-webhook
  namespace: das-operator
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: das-operator-webhook
      app.kubernetes.io/part-of: das-operator
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: das-operator-webhook
        openshift.io/required-scc: restricted-v2
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
      labels:
        app.kubernetes.io/managed-by: das-operator
        app.kubernetes.io/name: das-operator-webhook
        app.kubernetes.io/part-of: das-operator
        app.kubernetes.io/version: 0.0.1
    spec:
      nodeSelector:
        node-role.kubernetes.io/control-plane: ""
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                app.kubernetes.io/name: das-operator-webhook
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - command:
          - /usr/bin/das-webhook
        args:
          - serve
          - --tls=true
          - --tlskey=/etc/webhook/certs/tls.key
          - --tlscert=/etc/webhook/certs/tls.crt
          - --cacert=/etc/webhook/certs/ca.crt
        image: quay.io/ryan.phillips/das-webhook
        imagePullPolicy: Always
        name: das-operator-webhook
        livenessProbe:
          httpGet:
            scheme: HTTPS
            path: /healthz
            port: https
          initialDelaySeconds: 15
          periodSeconds: 20
        startupProbe:
          exec:
            command:
            - cat
            - /etc/webhook/certs/ca.crt
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            scheme: HTTPS
            path: /readyz
            port: https
          initialDelaySeconds: 5
          periodSeconds: 10
        ports:
        - containerPort: 8443
          name: https
        resources:
          requests:
            cpu: 5m
            memory: 30Mi
        securityContext: {}
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/webhook/certs
          name: cert
          readOnly: true
      priorityClassName: system-cluster-critical
      securityContext: {}
      serviceAccountName: das-operator
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
          items:
          - key: ca.crt
            path: ca.crt
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
